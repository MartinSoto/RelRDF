2006-01-17  Martin Soto  <martinsoto@users.sourceforge.net>

	* tree/rewrite.py (promoteSelect, flattenSelect): New
	simplification operations.

2006-01-17  Martin Soto  <martinsoto@users.sourceforge.net>

	* tree/rewrite.py (remakeExpr, treeMatchApply.operationWrapper) 
	(flattenAssoc.operation): Factor expression rebuild.

2006-01-17  Martin Soto  <martinsoto@users.sourceforge.net>

	* tree/rewrite.py (treeMatchApply): New apply operation for
	transformations that only affect a particular node type.
	(flattenAssoc): Implement based on treeMatchApply.

2006-01-17  Martin Soto  <martinsoto@users.sourceforge.net>

	* tree/rewrite.py (treeApply, flattenAssoc.operation): Return a
	tuple containing the transformed expression and a boolean value
	indicating whether the expression was changed or not.

2006-01-17  Martin Soto  <martinsoto@users.sourceforge.net>

	* tree/rewrite.py: New module for expression rewriting
	operations.

	* tree/expression.py (ExpressionNode.copyNode, Uri.copyNode) 
	(Literal.copyNode, FieldRef.copyNode, Operation.copyNode) 
	(Relation.copyNode, Optional.copyNode, Select.copyNode) 
	(Project.copyNode): Add a copyNode method to expression nodes to
	copy the main node and replace the subexpressions,

	* serql/serql.py (curry): Moved to new rewrite module.

2006-01-17  Martin Soto  <martinsoto@users.sourceforge.net>

	* tree/expression.py (NodeTypes, ExpressionNode.__slots__) 
	(ExpressionNode.__init__, getType, ExpressionNode.prettyPrint) 
	(NotSupported.__init__, Literal.__init__, Uri.__init__) 
	(FieldRef.__init__, Operation.__init__, Comparison.__init__) 
	(BooleanOperation.__init__, Relation.__init__, Optional.__init__) 
	(Product.__init__, Select.__init__, Project.__init__): 
	* serql/serql.py (Parser.exprFromTriple, Parser.exprFromPattern): 
	* serql/query.py (NodeTypes, Var.__init__): 
	Get rid of enumerated node types and resort to actual classes and
	isinstance instead.

2006-01-16  Martin Soto  <martinsoto@users.sourceforge.net>

	* tree/enum.py:
	* serql/serql-parse.py:
	* serql/query.py:
	* serql/serql.g:
	* serql/serql.py:
	* tree/expression.py:
	* serql/__init__.py:
	* serql/sample.serql:
	* tree/__init__.py:
	* tree/literal.py:
	* tree/uri.py:
	Extend translator to produce relational expression trees from a
	subset of SerQL.

2006-01-11  Martin Soto  <martinsoto@users.sourceforge.net>

	* enum.py: Added typed slightly adapted version of Zoran
	Isailovski's enumeration module:
	http://aspn.activestate.com/ASPN/Cookbook/Python/Recipe/413486

